
Smart Clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000019e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  0000019e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000019e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000da6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000ed9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 57 00 	call	0xae	; 0xae <main>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <CTC_mode>:
  90:	84 b5       	in	r24, 0x24	; 36
  92:	82 60       	ori	r24, 0x02	; 2
  94:	84 bd       	out	0x24, r24	; 36
  96:	8c e3       	ldi	r24, 0x3C	; 60
  98:	87 bd       	out	0x27, r24	; 39
  9a:	85 b5       	in	r24, 0x25	; 37
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	85 bd       	out	0x25, r24	; 37
  a0:	ee e6       	ldi	r30, 0x6E	; 110
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	80 81       	ld	r24, Z
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	80 83       	st	Z, r24
  aa:	78 94       	sei
  ac:	08 95       	ret

000000ae <main>:
  ae:	0e 94 48 00 	call	0x90	; 0x90 <CTC_mode>
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <main+0x4>

000000b4 <__vector_14>:
  b4:	1f 92       	push	r1
  b6:	0f 92       	push	r0
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	0f 92       	push	r0
  bc:	11 24       	eor	r1, r1
  be:	8f 93       	push	r24
  c0:	9f 93       	push	r25
  c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	8c 33       	cpi	r24, 0x3C	; 60
  ce:	91 05       	cpc	r25, r1
  d0:	29 f0       	breq	.+10     	; 0xdc <__vector_14+0x28>
  d2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  da:	1e c0       	rjmp	.+60     	; 0x118 <__vector_14+0x64>
  dc:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  e0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
  e4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <MINUTES>
  e8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <MINUTES+0x1>
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	8c 33       	cpi	r24, 0x3C	; 60
  f0:	91 05       	cpc	r25, r1
  f2:	29 f0       	breq	.+10     	; 0xfe <__vector_14+0x4a>
  f4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <MINUTES+0x1>
  f8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <MINUTES>
  fc:	0d c0       	rjmp	.+26     	; 0x118 <__vector_14+0x64>
  fe:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <MINUTES+0x1>
 102:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <MINUTES>
 106:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <HOURS>
 10a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <HOURS+0x1>
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <HOURS+0x1>
 114:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <HOURS>
 118:	9f 91       	pop	r25
 11a:	8f 91       	pop	r24
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
